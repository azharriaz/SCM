// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCM.StudentCourses.Data;

namespace SCM.StudentCourses.Migrations
{
    [DbContext(typeof(StudentCoursesDbContext))]
    partial class StudentCoursesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SCM.StudentCourses.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseNo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float>("CreditHours")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseNo = "BSCS-301",
                            CreditHours = 3f,
                            Name = "Introduction to Computer Science - I"
                        },
                        new
                        {
                            Id = 2,
                            CourseNo = "BSCS-303",
                            CreditHours = 4f,
                            Name = "Mathematics - I (Calculus)"
                        },
                        new
                        {
                            Id = 3,
                            CourseNo = "BSCS-305",
                            CreditHours = 3f,
                            Name = "Statistics and Data Analysis"
                        },
                        new
                        {
                            Id = 4,
                            CourseNo = "BSCS-307",
                            CreditHours = 3f,
                            Name = "Physics - I (General Physics)"
                        },
                        new
                        {
                            Id = 5,
                            CourseNo = "BSCS-309",
                            CreditHours = 3f,
                            Name = "English"
                        },
                        new
                        {
                            Id = 6,
                            CourseNo = "BSCS-311",
                            CreditHours = 3f,
                            Name = "Islamic Learning & Pakistan Studies"
                        });
                });

            modelBuilder.Entity("SCM.StudentCourses.Entities.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("ObtainedCreditHours")
                        .HasColumnType("real");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            IsDeleted = false,
                            ObtainedCreditHours = 3f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            IsDeleted = false,
                            ObtainedCreditHours = 3f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            IsDeleted = false,
                            ObtainedCreditHours = 3.5f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            IsDeleted = false,
                            ObtainedCreditHours = 4f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            IsDeleted = false,
                            ObtainedCreditHours = 2f,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            IsDeleted = false,
                            ObtainedCreditHours = 3.2f,
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("SCM.StudentCourses.Entities.StudentCourse", b =>
                {
                    b.HasOne("SCM.StudentCourses.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
